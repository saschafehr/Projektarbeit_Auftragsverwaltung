// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projektarbeit_Auftragsverwaltung;

#nullable disable

namespace ProjektarbeitAuftragsverwaltung.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20221126105934_IntitalCreate")]
    partial class IntitalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Postcode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressID = 1,
                            City = "St. Gallen",
                            Postcode = 8595,
                            Street = "Scherzingerstrasse 13"
                        },
                        new
                        {
                            AddressID = 2,
                            City = "Frauenfeld",
                            Postcode = 8500,
                            Street = "Bahnhofstrasse 1"
                        });
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.HasIndex("AddressID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            AddressID = 1,
                            Email = "sw@gmx.ch",
                            Name = "Wuttke",
                            Password = "123",
                            Vorname = "Sandro"
                        },
                        new
                        {
                            CustomerID = 2,
                            AddressID = 1,
                            Email = "saw@gmx.ch",
                            Name = "Sau",
                            Password = "123",
                            Vorname = "Säuli"
                        },
                        new
                        {
                            CustomerID = 3,
                            AddressID = 2,
                            Email = "sew@gmx.ch",
                            Name = "Maus",
                            Password = "123",
                            Vorname = "Müsli"
                        });
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<int>("ItemGroupID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VATID")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.HasIndex("ItemGroupID");

                    b.HasIndex("VATID");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemID = 1,
                            ItemGroupID = 1,
                            Price = 1300m,
                            Title = "MacBook Pro",
                            VATID = 1
                        },
                        new
                        {
                            ItemID = 2,
                            ItemGroupID = 2,
                            Price = 100m,
                            Title = "Gaming Stuhl",
                            VATID = 1
                        },
                        new
                        {
                            ItemID = 3,
                            ItemGroupID = 1,
                            Price = 11300m,
                            Title = "Visual Studio 2022",
                            VATID = 1
                        });
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.ItemGroup", b =>
                {
                    b.Property<int>("ItemGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemGroupID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.HasKey("ItemGroupID");

                    b.HasIndex("ParentID");

                    b.ToTable("ItemGroups");

                    b.HasData(
                        new
                        {
                            ItemGroupID = 1,
                            Name = "IT"
                        },
                        new
                        {
                            ItemGroupID = 2,
                            Name = "Möbel"
                        },
                        new
                        {
                            ItemGroupID = 3,
                            Name = "Laptop",
                            ParentID = 1
                        },
                        new
                        {
                            ItemGroupID = 4,
                            Name = "Tisch",
                            ParentID = 2
                        });
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CustomerID = 1,
                            OrderDate = new DateTime(2022, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.OrderPosition", b =>
                {
                    b.Property<int>("OrderPositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderPositionID"));

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.HasKey("OrderPositionID");

                    b.HasIndex("ItemID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderPositions");

                    b.HasData(
                        new
                        {
                            OrderPositionID = 1,
                            ItemID = 1,
                            OrderID = 1
                        });
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.VAT", b =>
                {
                    b.Property<int>("VATID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VATID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.HasKey("VATID");

                    b.ToTable("VAT");

                    b.HasData(
                        new
                        {
                            VATID = 1,
                            Name = "Normalsatz",
                            Rate = 7.7000000000000002
                        },
                        new
                        {
                            VATID = 2,
                            Name = "Sondersatz",
                            Rate = 3.7000000000000002
                        },
                        new
                        {
                            VATID = 3,
                            Name = "Reduziertersatz",
                            Rate = 2.5
                        },
                        new
                        {
                            VATID = 4,
                            Name = "Befreitersatz",
                            Rate = 0.0
                        });
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Customer", b =>
                {
                    b.HasOne("Projektarbeit_Auftragsverwaltung.Model.Address", "Address")
                        .WithMany("Customer")
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Item", b =>
                {
                    b.HasOne("Projektarbeit_Auftragsverwaltung.Model.ItemGroup", "ItemGroup")
                        .WithMany("Items")
                        .HasForeignKey("ItemGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projektarbeit_Auftragsverwaltung.Model.VAT", "VAT")
                        .WithMany("Items")
                        .HasForeignKey("VATID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemGroup");

                    b.Navigation("VAT");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.ItemGroup", b =>
                {
                    b.HasOne("Projektarbeit_Auftragsverwaltung.Model.ItemGroup", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Order", b =>
                {
                    b.HasOne("Projektarbeit_Auftragsverwaltung.Model.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.OrderPosition", b =>
                {
                    b.HasOne("Projektarbeit_Auftragsverwaltung.Model.Item", "Item")
                        .WithMany("OrderPosition")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projektarbeit_Auftragsverwaltung.Model.Order", "Order")
                        .WithMany("OrderPosition")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Address", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Customer", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Item", b =>
                {
                    b.Navigation("OrderPosition");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.ItemGroup", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.Order", b =>
                {
                    b.Navigation("OrderPosition");
                });

            modelBuilder.Entity("Projektarbeit_Auftragsverwaltung.Model.VAT", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
